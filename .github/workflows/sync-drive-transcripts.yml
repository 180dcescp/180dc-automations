name: Sync Google Drive Transcripts to Notion

on:
  schedule:
    # Run every Monday at 10 AM UTC (weekly)
    - cron: '0 10 * * 1'
  workflow_dispatch: # Allow manual triggering
    inputs:
      test_mode:
        description: 'Run in test mode (check connections only)'
        required: false
        default: false
        type: boolean

jobs:
  sync-drive-transcripts:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: automation/package-lock.json
          
      - name: Install dependencies
        run: |
          cd automation
          npm ci
          
      - name: Verify required secrets
        run: |
          echo "üîç Checking required secrets..."
          if [ -z "${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}" ]; then
            echo "‚ùå GOOGLE_DRIVE_FOLDER_ID secret is not set"
            echo "Please add GOOGLE_DRIVE_FOLDER_ID=1Cm1eXn2oMwvXYnPr4fh92AdUF7zwULlP to your repository secrets"
            exit 1
          fi
          if [ -z "${{ secrets.NOTION_TOKEN }}" ]; then
            echo "‚ùå NOTION_TOKEN secret is not set"
            exit 1
          fi
          if [ -z "${{ secrets.MEETING_DATABASE_ID }}" ]; then
            echo "‚ùå MEETING_DATABASE_ID secret is not set"
            exit 1
          fi
          echo "‚úÖ All required secrets are configured"
          
      - name: Run Google Drive transcript sync
        env:
          # Notion Configuration
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          MEETING_DATABASE_ID: ${{ secrets.MEETING_DATABASE_ID }}
          
          # Google Drive Configuration
          GOOGLE_DRIVE_FOLDER_ID: ${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}
          GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
          GOOGLE_PRIVATE_KEY_ID: ${{ secrets.GOOGLE_PRIVATE_KEY_ID }}
          GOOGLE_PRIVATE_KEY: ${{ secrets.GOOGLE_PRIVATE_KEY }}
          GOOGLE_CLIENT_EMAIL: ${{ secrets.GOOGLE_CLIENT_EMAIL }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          
          # Slack Configuration
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
        run: |
          cd automation
          if [ "${{ github.event.inputs.test_mode }}" = "true" ]; then
            echo "üß™ Running in test mode - checking connections only"
            node -e "
              import('./sync-drive-transcripts.js').then(module => {
                const sync = new module.default();
                return sync.testConnections();
              }).then(() => {
                console.log('‚úÖ All connections successful');
                process.exit(0);
              }).catch(error => {
                console.error('‚ùå Connection test failed:', error);
                process.exit(1);
              });
            "
          else
            node sync-drive-transcripts.js
          fi
          
      - name: Send Slack notification on failure
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
        run: |
          if [ -n "$SLACK_BOT_TOKEN" ] && [ -n "$SLACK_CHANNEL" ]; then
            curl -X POST -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
                 -H "Content-Type: application/json" \
                 -d '{
                   "channel": "'"$SLACK_CHANNEL"'",
                   "text": "‚ùå Google Drive Transcript Sync Failed",
                   "blocks": [
                     {
                       "type": "section",
                       "text": {
                         "type": "mrkdwn",
                         "text": "‚ùå *Google Drive Transcript Sync Failed*\n\nüö® *Error:* The weekly sync of transcript files from Google Drive to Notion has failed.\n\nüîß *Action Required:* Check the GitHub Actions logs for details and ensure all secrets are properly configured.\n\n‚è∞ *Time:* '"$(date)"'"
                       }
                     }
                   ]
                 }' \
                 https://slack.com/api/chat.postMessage
          fi
