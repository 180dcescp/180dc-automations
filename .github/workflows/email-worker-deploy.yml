name: Deploy Consolidated Email Worker

on:
  push:
    branches: [main]
    paths:
      - 'automation/consolidated-email-worker.js'
      - 'automation/wrangler-consolidated-email.toml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: automation/package-lock.json

      - name: Install dependencies
        run: |
          cd automation
          npm install

      - name: Deploy Consolidated Email Worker
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          cd automation
          npx wrangler deploy --config wrangler-consolidated-email.toml

      - name: Send Slack notification on success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
        run: |
          if [ -n "$SLACK_BOT_TOKEN" ] && [ -n "$SLACK_CHANNEL" ]; then
            curl -X POST -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
                 -H "Content-Type: application/json" \
                 -d '{
                   "channel": "'"$SLACK_CHANNEL"'",
                   "text": "‚úÖ Email Worker Deployed Successfully",
                   "blocks": [
                     {
                       "type": "section",
                       "text": {
                         "type": "mrkdwn",
                         "text": "‚úÖ *Consolidated Email Worker Deployed Successfully*\n\nüìß *Service:* 180dc-email-worker\nüåê *Platform:* Cloudflare Workers\n‚è∞ *Time:* '"$(date)"'\n\nüéØ *Features:*\n‚Ä¢ Standard email forwarding\n‚Ä¢ Presidency department forwarding\n‚Ä¢ Google Sheets integration"
                       }
                     }
                   ]
                 }' \
                 https://slack.com/api/chat.postMessage
          fi

      - name: Send Slack notification on failure
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
        run: |
          if [ -n "$SLACK_BOT_TOKEN" ] && [ -n "$SLACK_CHANNEL" ]; then
            curl -X POST -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
                 -H "Content-Type: application/json" \
                 -d '{
                   "channel": "'"$SLACK_CHANNEL"'",
                   "text": "‚ùå Email Worker Deployment Failed",
                   "blocks": [
                     {
                       "type": "section",
                       "text": {
                         "type": "mrkdwn",
                         "text": "‚ùå *Consolidated Email Worker Deployment Failed*\n\nüö® *Error:* Consolidated email worker deployment failed\nüåê *Platform:* Cloudflare Workers\n‚è∞ *Time:* '"$(date)"'"
                       }
                     }
                   ]
                 }' \
                 https://slack.com/api/chat.postMessage
          fi
